//
//  FeedListViewController.swift
//  TheVargo
//
//  Created by Andre Souza on 09/07/2018.
//  Copyright (c) 2018 AndreSamples. All rights reserved.
//
//  This file was generated by the 🐍 VIPER generator
//

import UIKit

final class FeedListViewController: VBaseViewController {

    // MARK: - Public properties -

    var presenter: FeedListPresenterInterface!
    
    @IBOutlet private weak var tableView: UITableView! {
        didSet {
            setupTableView()
        }
    }

    // MARK: - Lifecycle -

    override func viewDidLoad() {
        super.viewDidLoad()
    }

//    @IBAction func touchButton(_ sender: Any) {
////        presenter.didPressButton()
//        let feedService = FeedService()
//        feedService.get(page: 1, completion: { result in
//            switch result {
//            case .success(let feed):
//                debugPrint("SUCESSO!!!!!")
//                break
//            case .failure(let errorResponse):
//                debugPrint("ERRO!!!!! \(errorResponse)")
//                break
//            }
//        })
//    }
    
    
}

// MARK: - Functions -

extension FeedListViewController {
    
    private func setupTableView() {
        tableView.register(FeedArticleTableViewCell.self)
        tableView.dataSource = self
        tableView.delegate = self
    }
    
}

// MARK: - UITableViewDataSource -

extension FeedListViewController: UITableViewDataSource {
    
    func numberOfSections(in tableView: UITableView) -> Int {
        return presenter.numberOfSections()
    }
    
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return presenter.numberOrItems(in: section)
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        let cell = tableView.dequeueReusableCell(forIndexPath: indexPath) as FeedArticleTableViewCell
        cell.item = presenter.item(at: indexPath)
        return cell
    }
    
}

// MARK: - UITableViewDelegate -

extension FeedListViewController: UITableViewDelegate {
    
    func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
        tableView.deselectRow(at: indexPath, animated: true)
        presenter.didSelectItem(at: indexPath)
    }
    
}

// MARK: - Extensions -

extension FeedListViewController: FeedListViewInterface {
    
    func reloadData() {
        tableView.reloadData()
    }
    
    func showLoading(_ loading: Bool) {
        showLoadingView(loading)
    }
    
    func showError(message: String, target: Any, action: Selector) {
        showError(message: message, target: target, action: action)
    }
    
}
